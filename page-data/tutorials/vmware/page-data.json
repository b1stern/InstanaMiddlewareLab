{"componentChunkName":"component---src-pages-tutorials-vmware-index-mdx","path":"/tutorials/vmware/","result":{"pageContext":{"frontmatter":{"title":"Automating infrastructure in the data center","description":"Automating provisioning in VMware virtualization"},"relativePagePath":"/tutorials/vmware/index.mdx","titleType":"page","MdxNode":{"id":"e05c60a0-ef5a-53be-aeb5-396026ab0fd4","children":[],"parent":"b7f66ed2-1c9f-5a70-9e0d-25a4956ccf8c","internal":{"content":"---\ntitle: Automating infrastructure in the data center\ndescription: Automating provisioning in VMware virtualization\n---\n\n# Automation with VMware\n\nIn this exercise you will learn about the service library and how to use Terraform and other integrations to automate tasks within a VMware environment.  We'll begin by using an existing Service to provision a Virtual Machine.  Next, we'll learn how to modify the Service and explore some of the other capabilities such as the service composer.  Finally, you'll learn how to publish the service into the service library so that end users can run your service.  \n\n1) Begin by selecting the hamburger menu in the upper left corner\n  ![](images/2021-04-27-21-07-15.png)\n\n2) From the dropdown menu, select \"Automate Infrastructure\" and then \"Service Library\n  ![](images/2021-04-30-12-58-41.png)\n\n\n  In case you access this module for the first time, \"Welcome\" screen may pop-up. If that happens, click the **Service library** link.\n  ![](images/2021-05-04-10-48-19.png)\n  \n\nThe Service Library is where a typical end-user would go to take advantage of the automations that other users have created. These users don't need administrative rights or knowledge of Terraform, but can take advantage of the automation capabilities.  You will noticed that the services are organized into categories such as Virtual Machine and Cluster Lifecycle Services.  These services are a small subset of the services that are provided out of the box with the solution. These are the ones that have been published where your user account has been granted access.\n\nWe will begin by deploying a single virtual machine into VMware.\n\n3) Find the service named \"Think Lab VMware\"\n  ![](images/2021-04-28-20-40-30.png)\n\n\n4) Double click on the box\n\n\n5) Click \"Next\" to execute the service: ![](images/2021-04-28-20-41-56.png)\n\n\nThis screen contains a list of parameters that are required to provision a virtual machine into VMware.  It is possible to expose other parameters such as the VMware Datastore, VMware Cluster, etc. but we intentionally want to keep this simple for the end user.\n\n\n6) Select a namespace of \"vmware\" for the VM.  CP4MCM always associates resources with a project/namespace.  The namespace can be used to restrict permissions for the provisioned resource.\n  ![](images/2021-04-28-21-01-39.png)\n\n\n7) Next specify a service instance. This is the name of the service being provisioned.  You can use this service instance to perform maintenance and delete the service.  For this lab, specify your username as the service name to ensure we have a unique service instance name\n  ![](images/2021-04-28-20-55-02.png)\n\n\n8) Select an Environment for your VM (Development, QA, etc.).  Any value is fine for the lab.\n  ![](images/2021-04-28-21-03-22.png)\n\n\n9) Assign a name to your virtual machine.   This name becomes the hostname of the virtual machine.  The default value is \"demovm\".  Change this to your username to ensure that we don't have any naming conflicts.\n  ![](images/2021-04-28-21-06-36.png)\n\n\n10) In the next field, you will specify the memory for the VM.  We recommend leaving this at 1024 to conserve resource on vCenter.  Currently, we have the service setup to allow only the values of 1024 or 2048.   If you specify a different value, you'll get a warning.\n  ![](images/2021-04-28-21-08-51.png)\n\n\n11) Specify the VM vCPU Allocation.  This is the number of virtual CPUs assigned to the VM.  Specify 1 or 2 CPUs.  There is data validation that will only allow you to specify 1, 2, or 4 CPUs.  Later in the lab, you'll learn how to convert this to a dropdown list containing 1,2,4, and 8 CPUs.\n  ![](images/2021-04-28-21-10-10.png)\n\n\n12) Finally specify the disk space for the virtual machine. This VMware template requires a minimum of 25 Gig of disk space.  There is data validation that will only allow you to specify between 25 and 39 Gig of disk space.\n  ![](images/2021-04-28-21-12-51.png)\n\n\n13) You are now ready to deploy your virtual machine.  Click the \"Deploy\" button to begin the provisioning process.\n  ![](images/2021-04-28-21-13-51.png)\n\n\n14) At this point, a dialog will open indicating that your order has been submitted. There are two buttons on the dialog.  Click on the \"Go to Instances\" button and you can watch the logs as your virtual machine is provistioning.\n  ![](images/2021-04-28-21-17-15.png)\n\n\n15) You will see a list of deployed instances.  Search for your username in the list\n  ![](images/2021-04-28-21-18-56.png)\n\n\n16) Click on the \"name\" of the service.  In the example, click on \"student37\"\n\n\n17) You will be taken to a page where you can see a summary of the deployment.  It may say that the deployment is completed or may say that it is in progress or even failed. \n  ![](images/2021-04-28-21-20-18.png)\n\n\n18) On this page, you'll see a tab at the top for \"Log file\" or a link on the right labeled \"view log\".  Click on either one of those to view the logs.\n  ![](images/2021-04-28-21-22-40.png)\n\n\n19) This log shows you all of the steps that Terraform performed in order to deploy the virtual machine.  You should see a message at the end of the log indicating success\n  ![](images/2021-04-28-21-24-07.png)\n\n\n  You have now successfully provisioned a virtual machine via the service library.\n\n\n20) Note:  You can also Terminate and Delete the virtual machine you provisioned.  Normally, you terminate the VM first.  Then you delete the VM.  This is an optional step for the lab. If you want to see how the termination and deletion works, go to the 3 dots in the upper right corner:\n  ![](images/2021-05-01-18-35-32.png)\n   - Select Terminate\n   - Wait for the Terminate to complete.  Then, select Delete\n\nYou have now successfully deployed a virtual machine into VMware and optionally deleted the virtual machine.\n\n\n***\n\n## Explore and Modify a Service\n\nNow let's take a look at how the service was created.  You'll learn how to modify a service and add more capabilities.  And, learn how to publish the service to the service library so that other users can run your service.\n\n\n1) Select the hamburger menu in the upper left corner\n  ![](images/2021-04-27-21-07-15.png)\n\n\n2) From the dropdown, select \"Library\" and then \"Services\"\n![](images/2021-05-05-14-48-12.png)\n\n\n3) The first time you do this, you will be taken to the \"welcome\" page.  If not, you will be taken directly to the list of Services that are installed in the environment and you can proceed to step 4)\n  ![](images/2021-04-29-08-07-57.png)\n\n\n  The welcome page is used to setup the initial steps to setup the services. These steps include setting up the cloud and vCenter connections, creating Terraform templates, and then creating a service.  These initial steps have already been performed in this environment.  Click on the \"Service library\" link or go to the hamburger menu and select Library->Services.\n  ![](images/2021-04-29-08-10-57.png)\n\n\n  You are now looking at the Manage service library.  Here, you'll see a number of Terraform based services that are provided\n  with the product.  These services can be used to provision virtual machines, provision cloud services, perform cluster\n  lifecycle management, install middleware, and more.  There is also an example template that includes an approval process. \n  This allows you to require an approval before resources are provisioned.\n\n\n4) Scroll down and view the services that exist.  Or, use the catagories on the left to filter the services\n  ![](images/2021-05-01-20-52-33.png)\n\n\n5) Locate the \"Think Lab VMware\" service.  This is the service that you just provisioned via the Service Library.\n\n\n6) You are going to make a copy of this service so that you can make modifications without impacting other users.  \n\n\n7) Click the 3 dots on the right side and then select \"Duplicate\"\n  ![](images/2021-04-29-08-18-01.png)\n\n\n8) A dialog will open.  At the bottom of the dialog you will see a name that was automatically populated with \"Copy of Think Lab VMware\".   Note:  you may have to scroll down within the dialog in order to see the \"Name\" field.  Change the name to a name that begins with your username. For example, \"student37 VMware service\".  Then, click the \"Duplicate\" button.\n\n\n  ![](images/2021-04-29-08-21-11.png)\n\n\n  You are now in the editor for your service.\n\n\n  You'll notice that the current version is 3.0.0.2.  It is possible to create additional versions and be working on multiple versions simultaneously.  Or, have one version that is published and a newer version that is under development.  We'll work with version 3.0.0.2.\n\n\n9) Scroll down to the bottom of the page.  Here, you can see the GitHub link to where the Service definition is stored and the prerequisites.\n  ![](images/2021-04-29-20-10-16.png)\n\n\n10) At the top of the page, click on the Parameters tab. You'll see a list of input parameters that are used for this service.\n  ![](images/2021-04-29-20-13-15.png)\n\n\n11) Let's learn how to modify one of the input parameters to improve the service.   Select the 3 vertical dots on the right side for the vm_vcpu input parameter.\n  ![](images/2021-05-01-20-59-57.png)\n\n\n  A dialog will open with the existing definition.  You'll notice that the default value of 1 virtual CPU is already populated.  There are currently data validation rules that limit the CPUs to 1, 2, or 4.\n  ![](images/2021-05-05-15-07-34.png)\n\n\n12) Remove the Validation Rule and Validation rule description\n  ![](images/2021-05-05-15-09-42.png)\n\n\n13) To improve the service, let's change the vCPU to a dropdown list.  Click on the \"Specify options\" checkbox (1) as shown above.  The dialog will change and you'll see options to edit labels and values.\n  ![](images/2021-05-05-15-14-34.png)\n\n\n14)  Populate the label field with \"1 CPU\" and values field with \"1\" and use the \"Add\" button to add 3 more rows of options.  Populate the rows with (1, 2, 4, 8 CPUs).  Leave 1 CPU as the default value (see the raio button)  The dialog should look like the screen below.  Then, click the Save.\n  ![](images/2021-04-29-20-23-46.png)\n\n\n15) Finally, click Save in the upper right corner to save your Service\n  ![](images/2021-05-01-21-04-56.png)\n\n\n16) Now try a \"Test Deploy\" of the Service to see how your new dropdown list behaves.  To see the diaglog, click the 3 vertical dots in the upper right corner.  Then, select \"Test Deploy\" as seen below.\n  ![](images/2021-05-01-21-07-35.png)\n\n\n17) Click the \"Next\" button in the lower right corner:  \n  ![](images/2021-05-01-21-10-14.png)\n\n\n18) Now, view the dropdown list for the VM vCPU Allocation.\n  ![](images/2021-05-01-21-11-18.png)\n\n\nAt this point, you aren't going to actually deploy the service.  Continue on to the next section of the lab.\n\n\nYou have now explored and modified a service.  The next step is to explore the Composition user interface.\n\n\n***\n\n## Explore Composition\n\nNow, let's explore the Composition user interface.  You can use the Composition UI to build complex workflows via a drag and drop set of capabilities.  Begin be exploring some existing services.  Later, you'll learn to build your own.\n\n\n1) Click the link in the top left labeled \"Service Library\" to return to the list of available services\n  ![](images/2021-04-29-20-40-56.png)\n\n\n  You should see a list of the available services.\n  ![](images/2021-05-05-15-25-15.png)\n\n\n2) At the top of the screen type \"MEAN\" into the search bar to filter the least of services\n  ![](images/2021-04-29-20-43-38.png)\n\n\n  You will see a service titled \"Mult Cloud - MEAN Stack deployment\"\n\n\n3) Click on the down arrow to expand the service.  Here is where you will see the versions of the service that exist.  You can only edit and deploy a specific version of the service.\n  ![](images/2021-04-29-20-47-27.png)\n\n\n4) Then, click the 3 dots on the right that are specific to the 2.4.0.0 version and select edit. \n  ![](images/2021-04-29-20-49-40.png)\n\n\n  You are now editing version 2.4.0.0 of the MEAN Stack deployment.\n\n\n5) Click on the \"Composition\" tab\n  ![](images/2021-04-29-20-51-33.png)\n\n\n6) Examine the Composition.  The first item on the left is a \"Decision\" where a user gets to choose the cloud where the service will be deployed.  If you were to deploy this service, you would be given the option to deploy to VMware, the IBM Cloud, AWS, or Azure.\n  - After selecting a Cloud, the service would use the Terraform template for the selected Cloud to deploy the MEAN Stack.\n  - You can see each of the 4 clouds listed vertically and there is a Terraform template for each.\n  - After the Mean stack is provisioned to the selected Cloud, the Composition flow next registers the system in a ServiceNow CMDB.\n  - Finally, an Email is sent indicating the provisioning is complete.\n  ![](images/2021-04-29-20-59-24.png)\n\n\n7) Click on the SNow CMDB icon\n  ![](images/2021-04-30-10-35-46.png)\n\n\n  You'll notice that information will be populated on the right side of the screen.  Here you can see the Basic information that describes the Terraform template that you selected.\n\n\n8)  Click on the \"Parameters\" tab that is just to the right of the \"Basic Information\" tab.\n  ![](images/2021-04-30-10-37-43.png)\n  \n  \n  - You can see the input parameters that will be passed into the CMDB.  \n  ![](images/2021-05-05-15-31-28.png)\n  \n  \n  - Let's examine the other components that can be added to a service composition.  If you look on the left side, you'll notice different categories of objects that can be added to the service.  As you examine the content on the left, you'll notice Decision flows, E-mail Notification, Rest Hook, other Terraform templates, and Ansible Tower templates.  \n  ![](images/2021-04-30-11-00-05.png)\n\n\n9) As shown above, select the \"Demo Job Template\" Ansible Tower template and drag it over to the Composition area.  As you drag the Ansible Tower template, you'll notice that boxes appear on the composition screen.  You can drop the template on any one of the boxes.   After a few seconds that Ansible Tower template will appear on the screen.  In order to make this functional, you would need to define Parameters to pass between components of the service composition.   We won't do that in this portion of the lab.  The \"IBM Cloud Automation\" portion of the lab will go into a little more detail.\n  ![](images/2021-04-30-11-03-55.png)\n\n\n10) Click on \"<- Service Library\" in the upper left corner to navigate back to the main page.  \n![](images/2021-05-05-15-34-27.png)\n\n\n11) A dialog will open.  Click Continue so that your changes won't be saved.\n![](images/2021-05-05-15-36-42.png)\n\n\nYou have now seen how the Service Composition user interface can help you build complex automations via drag and drop capabilities.\n\n\n***\n\n## Executing Terraform templates directly\n\n\nThere is tremendous value in building and executing Services within the Cloud Pak.   But sometimes you just want to execute a Terraform template.  \n\n\n1) Click on the \"Terraform templates\" tab at the top of the screen and you will see a list of available templates\n  ![](images/2021-04-30-11-12-09.png)\n\n\n2) Click on the icon next to the \"Import Template\" button.  This allows you to filter the templates:  \n  ![](images/2021-04-30-11-31-11.png)\n\n\n3) Select the icon, then check the \"VMware vSphere\" checkbox and you'll see a list of templates that can be run in a VMware environment\n  ![](images/2021-04-30-11-32-51.png)\n\n\n  There are two advantages of executing a Terraform template directly:\n  - First, you will have access to parameters that are not exposed in the Service.  For example, maybe you want to provision to a different vSphere Cluster.\n  - Second, occasionally you will run into cases where the Terraform template runs correctly, but the service doesn't.  It is a good debug tool.  A good development practice is to first deploy and debug the Terraform template until it successfully deploys.  Then, deploy and debug the Service until it deploys successfully.\n\n\n***\n\n## Publishing Your Service to the Service Library\n\n\nYou have modified your Service and changed the menus.  Now, let's make it available to end users via the Service Library.\n\n\n1) Click back on the \"Services tab of the Manage service library\n  ![](images/2021-04-30-11-49-36.png)\n\n\n2) Find your service \"studentxx VMware service\"\n\n\n  When publishing a service, you must publish a specific version of your service.\n\n\n3) Expand your template by clicking on the dropdown arrow on the left.\n  ![](images/2021-04-30-11-52-25.png)\n\n\n4) On the right side, click on the 3 vertical dots next to version 3.0.0.2 and select \"Publish\"\n  ![](images/2021-04-30-11-53-38.png)\n\n\n  A dialog opens and asks to confirm whether you want to publish vesrion 3.0.0.2.\n  ![](images/2021-04-30-11-56-01.png)\n\n\n5) Click \"Publish\"\n\n\n6) A dialog will open indicating that the Service has been published.  Click the \"Close\" button to close the dialog.\n  ![](images/2021-04-30-11-58-22.png)\n\n\n7) The next step is to assign permissions to your newly published service.   At the top level of your Service, click on the 3 vertical dots on the right and select \"Assign access\"\n  ![](images/2021-04-30-12-08-45.png)\n\n\n8) A dialog opens with a list of namespaces.  Permissions for the service library is done at the namespace level.  You will select the namespaces that you want to give permissions to.  Your user account has permissions to the vmware namespace, so check that checkbox.\n![](images/2021-04-30-12-12-43.png)\n\n\n9) Then, click the \"Assign\" button at the bottom of the dialog.\n\n\n10) A dialog opens indicating that the assignment was successful.  Click \"Close\"\n  ![](images/2021-04-30-12-14-10.png)\n\n\n11) Click on \"Return to main navigation\"\n  ![](images/2021-04-30-12-02-33.png)\n\n\n12) Select the hamburger menu in the top left.\n  ![](images/2021-04-30-12-05-14.png) \n  \n\n13) Then select Automate Infrastructure -> Service library\n  ![](images/2021-04-30-12-04-22.png)\n\n\n  Notice that your service \"studentXX VMware service\" shows up in the Service Library\n  ![](images/2021-04-30-12-40-45.png)\n\n\nYou have now completed the section of the lab on automating tasks in VMware environments.\n\n\nIn this portion of the lab, you saw how easy it is for an end user to provision complex services that can provision virtual machine, clusters, install applications, and more.  You learned how to modify and customize a service.  You explored the capabilities within the service composer which allows you to combine Terraform, Ansible, Rest Hooks, ServiceNow, and more into complex workflows.  Finally, you learned how to publish your Service so that other users can execute the Service and provision VMware virtual machines.\n\n\nTo continue other portions of the lab, select one of the lab exercises in the upper left corner or select one of the images below.\n\n\n<Row>\n\n<Column colLg={3} colMd={3} noGutterMdLeft>\n<ArticleCard\n    color=\"dark\"\n    subTitle=\"Automation with the Public Cloud\"\n    title=\"Want to learn how to automate infrastructure management in Public clouds?\"\n    href=\"/tutorials/ibmcloud\"\n    actionIcon=\"arrowRight\"\n    >\n\n![](../../images/public-cloud.jpg)\n\n</ArticleCard>\n</Column>\n\n<Column colLg={3} colMd={3} noGutterMdLeft>\n<ArticleCard\n    color=\"dark\"\n    subTitle=\"Managing chargeback\"\n    title=\"Do you want to create and execute a chargeback report on the VM and container workloads?\"\n    href=\"/tutorials/Chargeback\"\n    actionIcon=\"arrowRight\"\n    >\n\n![](../../images/prereqs.jpg)\n\n</ArticleCard>\n</Column>\n\n<Column colLg={3} colMd={3} noGutterMdLeft>\n<ArticleCard\n    color=\"dark\"\n    subTitle=\"Managing SRE console access\"\n    title=\"Do you want to learn how to provide SRE secure terminal access to Virtual Machines?\"\n    href=\"/tutorials/Console_Access\"\n    actionIcon=\"arrowRight\"\n    >\n\n\n![](../../images/secure-access.jpg)\n\n\n</ArticleCard>\n</Column>\n</Row>\n\n\n***\n","type":"Mdx","contentDigest":"2999751556fcdd5bc55faf98dfb6f582","owner":"gatsby-plugin-mdx","counter":255},"frontmatter":{"title":"Automating infrastructure in the data center","description":"Automating provisioning in VMware virtualization"},"exports":{},"rawBody":"---\ntitle: Automating infrastructure in the data center\ndescription: Automating provisioning in VMware virtualization\n---\n\n# Automation with VMware\n\nIn this exercise you will learn about the service library and how to use Terraform and other integrations to automate tasks within a VMware environment.  We'll begin by using an existing Service to provision a Virtual Machine.  Next, we'll learn how to modify the Service and explore some of the other capabilities such as the service composer.  Finally, you'll learn how to publish the service into the service library so that end users can run your service.  \n\n1) Begin by selecting the hamburger menu in the upper left corner\n  ![](images/2021-04-27-21-07-15.png)\n\n2) From the dropdown menu, select \"Automate Infrastructure\" and then \"Service Library\n  ![](images/2021-04-30-12-58-41.png)\n\n\n  In case you access this module for the first time, \"Welcome\" screen may pop-up. If that happens, click the **Service library** link.\n  ![](images/2021-05-04-10-48-19.png)\n  \n\nThe Service Library is where a typical end-user would go to take advantage of the automations that other users have created. These users don't need administrative rights or knowledge of Terraform, but can take advantage of the automation capabilities.  You will noticed that the services are organized into categories such as Virtual Machine and Cluster Lifecycle Services.  These services are a small subset of the services that are provided out of the box with the solution. These are the ones that have been published where your user account has been granted access.\n\nWe will begin by deploying a single virtual machine into VMware.\n\n3) Find the service named \"Think Lab VMware\"\n  ![](images/2021-04-28-20-40-30.png)\n\n\n4) Double click on the box\n\n\n5) Click \"Next\" to execute the service: ![](images/2021-04-28-20-41-56.png)\n\n\nThis screen contains a list of parameters that are required to provision a virtual machine into VMware.  It is possible to expose other parameters such as the VMware Datastore, VMware Cluster, etc. but we intentionally want to keep this simple for the end user.\n\n\n6) Select a namespace of \"vmware\" for the VM.  CP4MCM always associates resources with a project/namespace.  The namespace can be used to restrict permissions for the provisioned resource.\n  ![](images/2021-04-28-21-01-39.png)\n\n\n7) Next specify a service instance. This is the name of the service being provisioned.  You can use this service instance to perform maintenance and delete the service.  For this lab, specify your username as the service name to ensure we have a unique service instance name\n  ![](images/2021-04-28-20-55-02.png)\n\n\n8) Select an Environment for your VM (Development, QA, etc.).  Any value is fine for the lab.\n  ![](images/2021-04-28-21-03-22.png)\n\n\n9) Assign a name to your virtual machine.   This name becomes the hostname of the virtual machine.  The default value is \"demovm\".  Change this to your username to ensure that we don't have any naming conflicts.\n  ![](images/2021-04-28-21-06-36.png)\n\n\n10) In the next field, you will specify the memory for the VM.  We recommend leaving this at 1024 to conserve resource on vCenter.  Currently, we have the service setup to allow only the values of 1024 or 2048.   If you specify a different value, you'll get a warning.\n  ![](images/2021-04-28-21-08-51.png)\n\n\n11) Specify the VM vCPU Allocation.  This is the number of virtual CPUs assigned to the VM.  Specify 1 or 2 CPUs.  There is data validation that will only allow you to specify 1, 2, or 4 CPUs.  Later in the lab, you'll learn how to convert this to a dropdown list containing 1,2,4, and 8 CPUs.\n  ![](images/2021-04-28-21-10-10.png)\n\n\n12) Finally specify the disk space for the virtual machine. This VMware template requires a minimum of 25 Gig of disk space.  There is data validation that will only allow you to specify between 25 and 39 Gig of disk space.\n  ![](images/2021-04-28-21-12-51.png)\n\n\n13) You are now ready to deploy your virtual machine.  Click the \"Deploy\" button to begin the provisioning process.\n  ![](images/2021-04-28-21-13-51.png)\n\n\n14) At this point, a dialog will open indicating that your order has been submitted. There are two buttons on the dialog.  Click on the \"Go to Instances\" button and you can watch the logs as your virtual machine is provistioning.\n  ![](images/2021-04-28-21-17-15.png)\n\n\n15) You will see a list of deployed instances.  Search for your username in the list\n  ![](images/2021-04-28-21-18-56.png)\n\n\n16) Click on the \"name\" of the service.  In the example, click on \"student37\"\n\n\n17) You will be taken to a page where you can see a summary of the deployment.  It may say that the deployment is completed or may say that it is in progress or even failed. \n  ![](images/2021-04-28-21-20-18.png)\n\n\n18) On this page, you'll see a tab at the top for \"Log file\" or a link on the right labeled \"view log\".  Click on either one of those to view the logs.\n  ![](images/2021-04-28-21-22-40.png)\n\n\n19) This log shows you all of the steps that Terraform performed in order to deploy the virtual machine.  You should see a message at the end of the log indicating success\n  ![](images/2021-04-28-21-24-07.png)\n\n\n  You have now successfully provisioned a virtual machine via the service library.\n\n\n20) Note:  You can also Terminate and Delete the virtual machine you provisioned.  Normally, you terminate the VM first.  Then you delete the VM.  This is an optional step for the lab. If you want to see how the termination and deletion works, go to the 3 dots in the upper right corner:\n  ![](images/2021-05-01-18-35-32.png)\n   - Select Terminate\n   - Wait for the Terminate to complete.  Then, select Delete\n\nYou have now successfully deployed a virtual machine into VMware and optionally deleted the virtual machine.\n\n\n***\n\n## Explore and Modify a Service\n\nNow let's take a look at how the service was created.  You'll learn how to modify a service and add more capabilities.  And, learn how to publish the service to the service library so that other users can run your service.\n\n\n1) Select the hamburger menu in the upper left corner\n  ![](images/2021-04-27-21-07-15.png)\n\n\n2) From the dropdown, select \"Library\" and then \"Services\"\n![](images/2021-05-05-14-48-12.png)\n\n\n3) The first time you do this, you will be taken to the \"welcome\" page.  If not, you will be taken directly to the list of Services that are installed in the environment and you can proceed to step 4)\n  ![](images/2021-04-29-08-07-57.png)\n\n\n  The welcome page is used to setup the initial steps to setup the services. These steps include setting up the cloud and vCenter connections, creating Terraform templates, and then creating a service.  These initial steps have already been performed in this environment.  Click on the \"Service library\" link or go to the hamburger menu and select Library->Services.\n  ![](images/2021-04-29-08-10-57.png)\n\n\n  You are now looking at the Manage service library.  Here, you'll see a number of Terraform based services that are provided\n  with the product.  These services can be used to provision virtual machines, provision cloud services, perform cluster\n  lifecycle management, install middleware, and more.  There is also an example template that includes an approval process. \n  This allows you to require an approval before resources are provisioned.\n\n\n4) Scroll down and view the services that exist.  Or, use the catagories on the left to filter the services\n  ![](images/2021-05-01-20-52-33.png)\n\n\n5) Locate the \"Think Lab VMware\" service.  This is the service that you just provisioned via the Service Library.\n\n\n6) You are going to make a copy of this service so that you can make modifications without impacting other users.  \n\n\n7) Click the 3 dots on the right side and then select \"Duplicate\"\n  ![](images/2021-04-29-08-18-01.png)\n\n\n8) A dialog will open.  At the bottom of the dialog you will see a name that was automatically populated with \"Copy of Think Lab VMware\".   Note:  you may have to scroll down within the dialog in order to see the \"Name\" field.  Change the name to a name that begins with your username. For example, \"student37 VMware service\".  Then, click the \"Duplicate\" button.\n\n\n  ![](images/2021-04-29-08-21-11.png)\n\n\n  You are now in the editor for your service.\n\n\n  You'll notice that the current version is 3.0.0.2.  It is possible to create additional versions and be working on multiple versions simultaneously.  Or, have one version that is published and a newer version that is under development.  We'll work with version 3.0.0.2.\n\n\n9) Scroll down to the bottom of the page.  Here, you can see the GitHub link to where the Service definition is stored and the prerequisites.\n  ![](images/2021-04-29-20-10-16.png)\n\n\n10) At the top of the page, click on the Parameters tab. You'll see a list of input parameters that are used for this service.\n  ![](images/2021-04-29-20-13-15.png)\n\n\n11) Let's learn how to modify one of the input parameters to improve the service.   Select the 3 vertical dots on the right side for the vm_vcpu input parameter.\n  ![](images/2021-05-01-20-59-57.png)\n\n\n  A dialog will open with the existing definition.  You'll notice that the default value of 1 virtual CPU is already populated.  There are currently data validation rules that limit the CPUs to 1, 2, or 4.\n  ![](images/2021-05-05-15-07-34.png)\n\n\n12) Remove the Validation Rule and Validation rule description\n  ![](images/2021-05-05-15-09-42.png)\n\n\n13) To improve the service, let's change the vCPU to a dropdown list.  Click on the \"Specify options\" checkbox (1) as shown above.  The dialog will change and you'll see options to edit labels and values.\n  ![](images/2021-05-05-15-14-34.png)\n\n\n14)  Populate the label field with \"1 CPU\" and values field with \"1\" and use the \"Add\" button to add 3 more rows of options.  Populate the rows with (1, 2, 4, 8 CPUs).  Leave 1 CPU as the default value (see the raio button)  The dialog should look like the screen below.  Then, click the Save.\n  ![](images/2021-04-29-20-23-46.png)\n\n\n15) Finally, click Save in the upper right corner to save your Service\n  ![](images/2021-05-01-21-04-56.png)\n\n\n16) Now try a \"Test Deploy\" of the Service to see how your new dropdown list behaves.  To see the diaglog, click the 3 vertical dots in the upper right corner.  Then, select \"Test Deploy\" as seen below.\n  ![](images/2021-05-01-21-07-35.png)\n\n\n17) Click the \"Next\" button in the lower right corner:  \n  ![](images/2021-05-01-21-10-14.png)\n\n\n18) Now, view the dropdown list for the VM vCPU Allocation.\n  ![](images/2021-05-01-21-11-18.png)\n\n\nAt this point, you aren't going to actually deploy the service.  Continue on to the next section of the lab.\n\n\nYou have now explored and modified a service.  The next step is to explore the Composition user interface.\n\n\n***\n\n## Explore Composition\n\nNow, let's explore the Composition user interface.  You can use the Composition UI to build complex workflows via a drag and drop set of capabilities.  Begin be exploring some existing services.  Later, you'll learn to build your own.\n\n\n1) Click the link in the top left labeled \"Service Library\" to return to the list of available services\n  ![](images/2021-04-29-20-40-56.png)\n\n\n  You should see a list of the available services.\n  ![](images/2021-05-05-15-25-15.png)\n\n\n2) At the top of the screen type \"MEAN\" into the search bar to filter the least of services\n  ![](images/2021-04-29-20-43-38.png)\n\n\n  You will see a service titled \"Mult Cloud - MEAN Stack deployment\"\n\n\n3) Click on the down arrow to expand the service.  Here is where you will see the versions of the service that exist.  You can only edit and deploy a specific version of the service.\n  ![](images/2021-04-29-20-47-27.png)\n\n\n4) Then, click the 3 dots on the right that are specific to the 2.4.0.0 version and select edit. \n  ![](images/2021-04-29-20-49-40.png)\n\n\n  You are now editing version 2.4.0.0 of the MEAN Stack deployment.\n\n\n5) Click on the \"Composition\" tab\n  ![](images/2021-04-29-20-51-33.png)\n\n\n6) Examine the Composition.  The first item on the left is a \"Decision\" where a user gets to choose the cloud where the service will be deployed.  If you were to deploy this service, you would be given the option to deploy to VMware, the IBM Cloud, AWS, or Azure.\n  - After selecting a Cloud, the service would use the Terraform template for the selected Cloud to deploy the MEAN Stack.\n  - You can see each of the 4 clouds listed vertically and there is a Terraform template for each.\n  - After the Mean stack is provisioned to the selected Cloud, the Composition flow next registers the system in a ServiceNow CMDB.\n  - Finally, an Email is sent indicating the provisioning is complete.\n  ![](images/2021-04-29-20-59-24.png)\n\n\n7) Click on the SNow CMDB icon\n  ![](images/2021-04-30-10-35-46.png)\n\n\n  You'll notice that information will be populated on the right side of the screen.  Here you can see the Basic information that describes the Terraform template that you selected.\n\n\n8)  Click on the \"Parameters\" tab that is just to the right of the \"Basic Information\" tab.\n  ![](images/2021-04-30-10-37-43.png)\n  \n  \n  - You can see the input parameters that will be passed into the CMDB.  \n  ![](images/2021-05-05-15-31-28.png)\n  \n  \n  - Let's examine the other components that can be added to a service composition.  If you look on the left side, you'll notice different categories of objects that can be added to the service.  As you examine the content on the left, you'll notice Decision flows, E-mail Notification, Rest Hook, other Terraform templates, and Ansible Tower templates.  \n  ![](images/2021-04-30-11-00-05.png)\n\n\n9) As shown above, select the \"Demo Job Template\" Ansible Tower template and drag it over to the Composition area.  As you drag the Ansible Tower template, you'll notice that boxes appear on the composition screen.  You can drop the template on any one of the boxes.   After a few seconds that Ansible Tower template will appear on the screen.  In order to make this functional, you would need to define Parameters to pass between components of the service composition.   We won't do that in this portion of the lab.  The \"IBM Cloud Automation\" portion of the lab will go into a little more detail.\n  ![](images/2021-04-30-11-03-55.png)\n\n\n10) Click on \"<- Service Library\" in the upper left corner to navigate back to the main page.  \n![](images/2021-05-05-15-34-27.png)\n\n\n11) A dialog will open.  Click Continue so that your changes won't be saved.\n![](images/2021-05-05-15-36-42.png)\n\n\nYou have now seen how the Service Composition user interface can help you build complex automations via drag and drop capabilities.\n\n\n***\n\n## Executing Terraform templates directly\n\n\nThere is tremendous value in building and executing Services within the Cloud Pak.   But sometimes you just want to execute a Terraform template.  \n\n\n1) Click on the \"Terraform templates\" tab at the top of the screen and you will see a list of available templates\n  ![](images/2021-04-30-11-12-09.png)\n\n\n2) Click on the icon next to the \"Import Template\" button.  This allows you to filter the templates:  \n  ![](images/2021-04-30-11-31-11.png)\n\n\n3) Select the icon, then check the \"VMware vSphere\" checkbox and you'll see a list of templates that can be run in a VMware environment\n  ![](images/2021-04-30-11-32-51.png)\n\n\n  There are two advantages of executing a Terraform template directly:\n  - First, you will have access to parameters that are not exposed in the Service.  For example, maybe you want to provision to a different vSphere Cluster.\n  - Second, occasionally you will run into cases where the Terraform template runs correctly, but the service doesn't.  It is a good debug tool.  A good development practice is to first deploy and debug the Terraform template until it successfully deploys.  Then, deploy and debug the Service until it deploys successfully.\n\n\n***\n\n## Publishing Your Service to the Service Library\n\n\nYou have modified your Service and changed the menus.  Now, let's make it available to end users via the Service Library.\n\n\n1) Click back on the \"Services tab of the Manage service library\n  ![](images/2021-04-30-11-49-36.png)\n\n\n2) Find your service \"studentxx VMware service\"\n\n\n  When publishing a service, you must publish a specific version of your service.\n\n\n3) Expand your template by clicking on the dropdown arrow on the left.\n  ![](images/2021-04-30-11-52-25.png)\n\n\n4) On the right side, click on the 3 vertical dots next to version 3.0.0.2 and select \"Publish\"\n  ![](images/2021-04-30-11-53-38.png)\n\n\n  A dialog opens and asks to confirm whether you want to publish vesrion 3.0.0.2.\n  ![](images/2021-04-30-11-56-01.png)\n\n\n5) Click \"Publish\"\n\n\n6) A dialog will open indicating that the Service has been published.  Click the \"Close\" button to close the dialog.\n  ![](images/2021-04-30-11-58-22.png)\n\n\n7) The next step is to assign permissions to your newly published service.   At the top level of your Service, click on the 3 vertical dots on the right and select \"Assign access\"\n  ![](images/2021-04-30-12-08-45.png)\n\n\n8) A dialog opens with a list of namespaces.  Permissions for the service library is done at the namespace level.  You will select the namespaces that you want to give permissions to.  Your user account has permissions to the vmware namespace, so check that checkbox.\n![](images/2021-04-30-12-12-43.png)\n\n\n9) Then, click the \"Assign\" button at the bottom of the dialog.\n\n\n10) A dialog opens indicating that the assignment was successful.  Click \"Close\"\n  ![](images/2021-04-30-12-14-10.png)\n\n\n11) Click on \"Return to main navigation\"\n  ![](images/2021-04-30-12-02-33.png)\n\n\n12) Select the hamburger menu in the top left.\n  ![](images/2021-04-30-12-05-14.png) \n  \n\n13) Then select Automate Infrastructure -> Service library\n  ![](images/2021-04-30-12-04-22.png)\n\n\n  Notice that your service \"studentXX VMware service\" shows up in the Service Library\n  ![](images/2021-04-30-12-40-45.png)\n\n\nYou have now completed the section of the lab on automating tasks in VMware environments.\n\n\nIn this portion of the lab, you saw how easy it is for an end user to provision complex services that can provision virtual machine, clusters, install applications, and more.  You learned how to modify and customize a service.  You explored the capabilities within the service composer which allows you to combine Terraform, Ansible, Rest Hooks, ServiceNow, and more into complex workflows.  Finally, you learned how to publish your Service so that other users can execute the Service and provision VMware virtual machines.\n\n\nTo continue other portions of the lab, select one of the lab exercises in the upper left corner or select one of the images below.\n\n\n<Row>\n\n<Column colLg={3} colMd={3} noGutterMdLeft>\n<ArticleCard\n    color=\"dark\"\n    subTitle=\"Automation with the Public Cloud\"\n    title=\"Want to learn how to automate infrastructure management in Public clouds?\"\n    href=\"/tutorials/ibmcloud\"\n    actionIcon=\"arrowRight\"\n    >\n\n![](../../images/public-cloud.jpg)\n\n</ArticleCard>\n</Column>\n\n<Column colLg={3} colMd={3} noGutterMdLeft>\n<ArticleCard\n    color=\"dark\"\n    subTitle=\"Managing chargeback\"\n    title=\"Do you want to create and execute a chargeback report on the VM and container workloads?\"\n    href=\"/tutorials/Chargeback\"\n    actionIcon=\"arrowRight\"\n    >\n\n![](../../images/prereqs.jpg)\n\n</ArticleCard>\n</Column>\n\n<Column colLg={3} colMd={3} noGutterMdLeft>\n<ArticleCard\n    color=\"dark\"\n    subTitle=\"Managing SRE console access\"\n    title=\"Do you want to learn how to provide SRE secure terminal access to Virtual Machines?\"\n    href=\"/tutorials/Console_Access\"\n    actionIcon=\"arrowRight\"\n    >\n\n\n![](../../images/secure-access.jpg)\n\n\n</ArticleCard>\n</Column>\n</Row>\n\n\n***\n","fileAbsolutePath":"/Users/bstern/tivoli/Best_Practices/InstanaMiddlewareLab/InstanaMiddlewareLab/src/pages/tutorials/vmware/index.mdx"}}},"staticQueryHashes":["1054721580","1054721580","1364590287","2102389209","2102389209","2456312558","2746626797","3018647132","3037994772","768070550"]}